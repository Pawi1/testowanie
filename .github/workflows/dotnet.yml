name: .NET Core Build, Test, and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: 'Release'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Restore dependencies
      run: dotnet restore Testowanie/Testowanie.csproj

    - name: Build projects
      run: |
        dotnet build Testowanie/Testowanie.csproj --configuration ${{ env.CONFIGURATION }} --no-restore
        dotnet build Testowanie.Tests/Testowanie.Tests.csproj --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Execute unit tests
      run: dotnet test Testowanie.Tests/Testowanie.Tests.csproj --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build Artifacts
        path: ./Testowanie/bin/${{ env.CONFIGURATION }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.1-${{ github.run_number }}
        release_name: Release v0.1-${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Prepare and package release assets
      run: |
        mkdir -p release
        cp -r ./Testowanie/bin/${{ env.CONFIGURATION }}/* release/
        zip -r release/Testowanie-${{ env.CONFIGURATION }}.zip release/

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/Testowanie-${{ env.CONFIGURATION }}.zip
        asset_name: Testowanie-${{ env.CONFIGURATION }}.zip
        asset_content_type: application/zip
