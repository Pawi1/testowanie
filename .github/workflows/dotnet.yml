name: .NET Core Build, Test, and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: 'Release'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: |
        dotnet restore Testowanie/Testowanie.csproj
        dotnet restore Testowanie.Tests/Testowanie.Tests.csproj

    - name: Build projects
      run: |
        dotnet build Testowanie/Testowanie.csproj --configuration ${{ env.CONFIGURATION }} --no-restore
        dotnet build Testowanie.Tests/Testowanie.Tests.csproj --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Execute unit tests
      run: dotnet test Testowanie.Tests/Testowanie.Tests.csproj --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: BuildArtifacts-${{ matrix.os }}
        path: ./Testowanie/bin/${{ env.CONFIGURATION }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts (Linux)
      uses: actions/download-artifact@v3
      with:
        name: BuildArtifacts-ubuntu-latest
        path: release-linux
    
    - name: Download build artifacts (Windows)
      uses: actions/download-artifact@v3
      with:
        name: BuildArtifacts-windows-latest
        path: release-windows

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.1-${{ github.run_number }}
        release_name: Release v0.1-${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Package release assets
      run: |
        zip -r testowanie-bin-windows.zip release-windows/net8.0/
        zip -r testowanie-bin-linux.zip release-linux/net8.0/

    - name: Upload ZIP Archive (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: testowanie-bin-windows.zip
        asset_name: testowanie-bin-windows.zip
        asset_content_type: application/zip
    
    - name: Upload ZIP Archive (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: testowanie-bin-linux.zip
        asset_name: testowanie-bin-linux.zip
        asset_content_type: application/zip

    # - name: Upload Windows Executable (Testowanie.exe)
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: release/net8.0/Testowanie.exe
    #     asset_name: Testowanie.exe
    #     asset_content_type: application/octet-stream

    # - name: Upload Windows Executable (Testowanie.dll)
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: release/net8.0/Testowanie.dll
    #     asset_name: Testowanie.dll
    #     asset_content_type: application/octet-stream

    # - name: Upload Linux/Mac Executable (Testowanie)
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: release/net8.0/Testowanie
    #     asset_name: Testowanie-Linux
    #     asset_content_type: application/octet-stream
